{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/aside/aside.component.ts","webpack:///src/app/aside/aside.component.html","webpack:///src/app/content/content.component.ts","webpack:///src/app/content/content.component.html","webpack:///src/app/dodawanie/dodawanie.component.html","webpack:///src/app/dodawanie/dodawanie.component.ts","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/login/dashboard/dashboard.component.ts","webpack:///src/app/login/dashboard/dashboard.component.html","webpack:///src/app/login/forgot-password/forgot-password.component.ts","webpack:///src/app/login/forgot-password/forgot-password.component.html","webpack:///src/app/login/sign-in/sign-in.component.ts","webpack:///src/app/login/sign-in/sign-in.component.html","webpack:///src/app/login/sign-up/sign-up.component.ts","webpack:///src/app/login/sign-up/sign-up.component.html","webpack:///src/app/login/verify-email/verify-email.component.ts","webpack:///src/app/login/verify-email/verify-email.component.html","webpack:///src/app/nav/nav.component.ts","webpack:///src/app/nav/nav.component.html","webpack:///src/app/services/auth.guard.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/score.service.ts","webpack:///src/app/services/score.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","initializeApp","firebaseConfig","declarations","providers","bootstrap","AsideComponent","scoreService","getScoreList","snapshotChanges","pipe","changes","map","c","key","payload","doc","data","subscribe","score","sort","a","b","czas","ContentComponent","DodawanieComponent","scoreservice","authservice","tab1","Array","tab","tabOdpowiedzi1","tabOdpowiedzi2","submitted","dobreodpowiedzi","intervalId","seconds","min","max","Math","floor","random","startTimer","i","randomNumber","dobrywynik","zlywynik1","zlywynik2","zlywynik3","liczba1","liczba2","length","j","onSubmit","getRandom","stopTimer","wygrales","przegrales","clearInterval","countDown","clearTimer","window","setInterval","date","Date","toString","ileOdpowiedzi","afAuth","currentUser","who","email","addScore","resetPytania","FooterComponent","HeaderComponent","DashboardComponent","authService","ForgotPasswordComponent","SignInComponent","SignUpComponent","VerifyEmailComponent","NavComponent","AuthGuard","router","next","state","isLoggedIn","navigate","providedIn","AuthService","afs","ngZone","authState","user","userData","localStorage","setItem","JSON","stringify","parse","getItem","password","signInWithEmailAndPassword","result","run","SetUserData","error","alert","message","createUserWithEmailAndPassword","SendVerificationMail","sendEmailVerification","passwordResetEmail","sendPasswordResetEmail","AuthLogin","GoogleAuthProvider","provider","signInWithPopup","userRef","uid","displayName","photoURL","emailVerified","set","merge","signOut","removeItem","refresh","location","reload","ScoreService","db","dbPath","highscoreRef","collection","param","add","Score","environment","production","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","bootstrapModule","err","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DodawanieComponent } from './dodawanie/dodawanie.component';\n\nimport { ForgotPasswordComponent } from './login/forgot-password/forgot-password.component';\nimport { VerifyEmailComponent } from './login/verify-email/verify-email.component';\nimport { SignInComponent } from './login/sign-in/sign-in.component';\nimport { SignUpComponent } from './login/sign-up/sign-up.component';\nimport { DashboardComponent } from './login/dashboard/dashboard.component';\nimport { AuthGuard } from './services/auth.guard';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: '/',\n    pathMatch: 'full'\n  },\n  { path: 'dodawanie', component: DodawanieComponent },\n  { path: 'sign-in', component: SignInComponent },\n  { path: 'register-user', component: SignUpComponent },\n  { path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard] },\n  { path: 'forgot-password', component: ForgotPasswordComponent },\n  { path: 'verify-email-address', component: VerifyEmailComponent }\n\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'gra';\n}\n","<!--navigacja-->\n<app-nav></app-nav>\n\n<div class=\"container\">\n    <div class=\"row\">\n\n        <!--header-->\n        <app-header class=\"col-12 text-center my-1\"></app-header>\n        <!--content-->\n        <app-content class=\"col-lg-8 text-center\"></app-content>\n        <!--aside-->\n        <app-aside class=\"col-lg-4 bg-light\"></app-aside>\n    </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { DodawanieComponent } from './dodawanie/dodawanie.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NavComponent } from './nav/nav.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { ContentComponent } from './content/content.component';\nimport { AsideComponent } from './aside/aside.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { environment } from 'src/environments/environment';\n\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\n\nimport { ForgotPasswordComponent } from './login/forgot-password/forgot-password.component';\nimport { VerifyEmailComponent } from './login/verify-email/verify-email.component';\nimport { RouterModule } from '@angular/router';\nimport { DashboardComponent } from './login/dashboard/dashboard.component';\nimport { SignUpComponent } from './login/sign-up/sign-up.component';\nimport { SignInComponent } from './login/sign-in/sign-in.component';\nimport { AuthService } from './services/auth.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DodawanieComponent,\n    NavComponent,\n    HeaderComponent,\n    FooterComponent,\n    ContentComponent,\n    AsideComponent,\n    ForgotPasswordComponent,\n    VerifyEmailComponent,\n    DashboardComponent,\n    SignUpComponent,\n    SignInComponent,\n  ],\n  imports: [\n    RouterModule,\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    FormsModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    AngularFirestoreModule,\n    AngularFireAuthModule, NgbModule,\n    ReactiveFormsModule\n\n  ],\n  providers: [AuthService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ScoreService } from '../services/score.service';\n\nimport { map } from 'rxjs/operators';\n\n\n@Component({\n  selector: 'app-aside',\n  templateUrl: './aside.component.html',\n  styleUrls: ['./aside.component.css']\n})\nexport class AsideComponent implements OnInit {\n\n  score: any;\n\n  constructor(private scoreService: ScoreService) { }\n\n  ngOnInit(): void {\n    this.getScoreList();\n  }\n\n  getScoreList() {\n    this.scoreService.getScoreList().snapshotChanges().pipe(\n      map(changes =>\n        changes.map(c =>\n          ({ key: c.payload.doc.id, ...c.payload.doc.data() })\n\n        )\n      )\n    ).subscribe(score => {\n      this.score = score;\n\n      return score.sort((a, b) => {\n        return (a.czas) - (b.czas);\n      });\n    });\n  }\n\n\n\n}\n","<p class=\"text\" *ngIf=\"score.length ===0\">Brak</p>\n<table class=\"table table-striped\">\n    <thead>\n        <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Kto</th>\n            <th scope=\"col\">Czas</th>\n            <th scope=\"col\">Kiedy</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let score of score |slice: 0:5; index as i\">\n            <th scope=\"row\">{{ i + 1 }}</th>\n            <td>\n                {{score.who}}\n            </td>\n            <td>\n                {{score.czas|number:'1.2-2'}}\n            </td>\n            <td>\n                {{score.date|date:'short'}}\n            </td>\n        </tr>\n\n\n\n    </tbody>\n</table>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-content',\n  templateUrl: './content.component.html',\n  styleUrls: ['./content.component.css']\n})\nexport class ContentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"kontener\" class=\"container\">\r\n    <div class=\"row justify-content-center\">\r\n        <div id=\"outlet\" class=\" bg-light p-4\">\r\n            <router-outlet></router-outlet>\r\n        </div>\r\n    </div>\r\n</div>","<button class=\"btn btn-primary\" (click)=\"getRandom()\" (click)=\"resetPytania()\">Nowe zadanie</button>\n<p>dobre odpowiedzi: {{dobreodpowiedzi}} w ciągu {{czas |number:'1.2-2'}} sekund</p>\n\n<div [hidden]=\"submitted\">\n    <p>{{liczba1}} + {{liczba2}} = ?</p>\n    <div class=\"container\">\n\n\n        <div class=\"row\" *ngFor=\"let odpowiedz of tabOdpowiedzi2\">\n            <div type=\"button\" class=\"col btn-dark\" (click)=\"czyWygrales(odpowiedz) \">\n                <p>{{odpowiedz}}</p>\n            </div>\n        </div>\n\n    </div>\n</div>\n","import { Component } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { ScoreService } from '../services/score.service';\nimport { Score } from '../services/score';\n\n\n@Component({\n  selector: 'app-dodawanie',\n  templateUrl: './dodawanie.component.html',\n  styleUrls: ['./dodawanie.component.css']\n})\nexport class DodawanieComponent {\n\n  constructor(public scoreservice: ScoreService, public authservice: AuthService) {\n\n  }\n  tab1 = new Array;\n  tab = new Array;\n  tabOdpowiedzi1 = new Array;\n  tabOdpowiedzi2 = new Array;\n  submitted = true;\n  liczba1: number;\n  liczba2: number;\n  dobreodpowiedzi = 0;\n  wynik: number;\n  intervalId = 0;\n  czas = 0;\n  seconds = 0;\n  score: Score = new Score();\n\n  randomNumber(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n\n  // cala funkcja losujaca\n\n  getRandom() {\n    this.startTimer();\n\n    // losowanie 5 liczb\n\n    for (let i = 0; i < 5; i++) {\n      this.tab[i] = this.randomNumber(1, 10);\n    }\n\n    // przypisywanie dobrego i złego wyniku do zmiennych\n\n    const dobrywynik = this.tab[0] + this.tab[1];\n    let zlywynik1 = this.tab[1] + this.tab[2];\n    let zlywynik2 = this.tab[2] + this.tab[3];\n    let zlywynik3 = this.tab[3] + this.tab[4];\n\n    // sprawdzanie czy odpowiedzi się nie powtarzają\n\n    for (; dobrywynik === zlywynik1 || dobrywynik === zlywynik2 || dobrywynik === zlywynik3 ||\n      zlywynik1 === zlywynik2 || zlywynik1 === zlywynik3 || zlywynik2 === zlywynik3;) {\n      zlywynik1 = this.randomNumber(2, 20);\n      zlywynik2 = this.randomNumber(2, 20);\n      zlywynik3 = this.randomNumber(2, 20);\n    }\n\n    // zmienne wyswietlane w tresci zadania\n\n    this.liczba1 = this.tab[0];\n    this.liczba2 = this.tab[1];\n\n    // przypisywanie wszystkich odpowiedzi do tablicy\n\n    this.tabOdpowiedzi1[0] = dobrywynik;\n    this.tabOdpowiedzi1[1] = zlywynik1;\n    this.tabOdpowiedzi1[2] = zlywynik2;\n    this.tabOdpowiedzi1[3] = zlywynik3;\n\n    // przypisywanie odpowiedzi do losowych miejsc w nowej tablicy tabOdpowiedzi2\n\n    for (let i = 0; i < this.tabOdpowiedzi1.length; i++) {\n      this.tab1[i] = this.randomNumber(0, 3);\n      for (let j = i; j !== 0; j--) {\n        if (this.tab1[i] === this.tab1[j - 1]) {\n          i--;\n        }\n      }\n      this.tabOdpowiedzi2[this.tab1[i]] = this.tabOdpowiedzi1[i];\n    }\n\n    // pokazywanie nowego zadania\n\n    this.onSubmit();\n  }\n\n  // wyswietlane komunikaty\n\n  wygrales() {\n    this.getRandom();\n    this.dobreodpowiedzi = this.dobreodpowiedzi + 1;\n  }\n  przegrales() {\n    this.stopTimer();\n    this.submitted = true;\n  }\n  resetPytania() {\n    this.dobreodpowiedzi = 0;\n    this.seconds = 0;\n  }\n\n  // warunek dobrej odpowiedzi\n\n  czyWygrales(a: number) {\n    if (a === this.liczba1 + this.liczba2) {\n      this.wygrales();\n    }\n    else { this.przegrales(); }\n  }\n\n  onSubmit(): void {\n    this.submitted = false;\n  }\n\n  // dodanie timera\n\n  clearTimer() {\n    clearInterval(this.intervalId);\n  }\n  startTimer() {\n    this.countDown();\n  }\n  stopTimer() {\n    this.clearTimer();\n  }\n\n  private countDown() {\n    this.clearTimer();\n    this.intervalId = window.setInterval(async () => {\n      this.seconds += 0.01;\n      if (this.dobreodpowiedzi === 3) {\n        this.czas = this.seconds;\n        this.stopTimer();\n        this.submitted = true;\n        this.score.date = new Date().toString();\n        this.score.ileOdpowiedzi = this.dobreodpowiedzi;\n        this.score.czas = this.czas;\n        this.score.who = (await this.authservice.afAuth.currentUser).email;\n        this.scoreservice.addScore(this.score);\n\n      } else {\n        this.czas = this.seconds;\n      }\n    }, 10);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>footer works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>header</p>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor(\n    public authService: AuthService\n  ) { }\n\n  ngOnInit() { }\n\n}\n","<!-- Sidebar navigation -->\n<div class=\"container\">\n    <div class=\"row\">\n\n\n\n        <!-- Main content -->\n        <main role=\"main\" class=\"col-md-9 ml-sm-auto col-lg-10 px-4\">\n            <div class=\"inner-adjust\">\n\n                <div class=\"pt-3 pb-2 mb-3 border-bottom\">\n                    <h1 class=\"h2\">User Profile</h1>\n                </div>\n                <div class=\"row\" *ngIf=\"authService.userData as user\">\n                    <div class=\"col-md-12\">\n                        <div class=\"media\">\n                            <img width=\"100px\" height=\"100px\" class=\"align-self-start mr-5 img-thumbnail rounded-circle\" src=\"{{(user.photoURL) ? user.photoURL : '/assets/dummy-user.png'}}\" alt=\"{{user.displayName}}\">\n                            <div class=\"media-body\">\n                                <h1><strong>{{(user.displayName) ? user.displayName : 'User'}}</strong></h1>\n                                <p>Email: <strong>{{user.email}}</strong></p>\n                                <p>Email Verified: <strong>{{user.emailVerified}}</strong></p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        </main>\n\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})\nexport class ForgotPasswordComponent implements OnInit {\n\n  constructor(\n    public authService: AuthService\n  ) { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"displayTable\">\n    <div class=\"displayTableCell\">\n        <div class=\"authBlock\">\n            <h3>Reset Password</h3>\n\n            <p class=\"text-center\">Please enter your email address to request a password reset.</p>\n\n            <div class=\"formGroup\">\n                <input type=\"email\" class=\"formControl\" placeholder=\"Email Address\" #passwordResetEmail required>\n            </div>\n\n            <!-- Calling ForgotPassword from AuthService Api -->\n            <div class=\"formGroup\">\n                <input type=\"submit\" class=\"btn btnPrimary\" value=\"Reset Password\" (click)=\"authService.ForgotPassword(passwordResetEmail.value)\">\n            </div>\n        </div>\n\n        <div class=\"redirectToLogin\">\n            <span>Go back to ? <span class=\"redirect\" routerLink=\"/sign-in\">Log In</span></span>\n        </div>\n\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.css']\n})\nexport class SignInComponent implements OnInit {\n\n  constructor(\n    public authService: AuthService\n  ) { }\n\n  ngOnInit() { }\n\n}\n","<div class=\"displayTable\">\n    <div class=\"displayTableCell\">\n\n        <div class=\"authBlock\">\n            <h3>Sign In</h3>\n            <div class=\"formGroup\">\n                <input type=\"text\" class=\"formControl\" placeholder=\"Username\" #userName required>\n            </div>\n\n            <div class=\"formGroup\">\n                <input type=\"password\" class=\"formControl\" placeholder=\"Password\" #userPassword required>\n            </div>\n\n            <!-- Calling SignIn Api from AuthService -->\n            <div class=\"formGroup\">\n                <input type=\"button\" class=\"btn btn-primary\" value=\"Log in\" (click)=\"authService.SignIn(userName.value, userPassword.value)\">\n            </div>\n\n            <div class=\"formGroup\">\n                <span class=\"or\"><span class=\"orInner\">Or</span></span>\n            </div>\n\n            <!-- Calling GoogleAuth Api from AuthService -->\n            <div class=\"formGroup\">\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"authService.GoogleAuth()\">\n          <i class=\"fab fa-google-plus-g\"></i>\n          Log in with Google\n        </button>\n            </div>\n\n            <div class=\"forgotPassword\">\n                <span routerLink=\"/forgot-password\" class=\"btn btn-primary\">Forgot Password?</span>\n            </div>\n        </div>\n\n        <div class=\"redirectToLogin\">\n            <span>Don't have an account?<span class=\"btn btn-primary\" routerLink=\"/register-user\"> Sign Up</span></span>\n        </div>\n\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent implements OnInit {\n\n  constructor(\n    public authService: AuthService\n  ) { }\n\n  ngOnInit() { }\n\n}\n","<div class=\"displayTable\">\n    <div class=\"displayTableCell\">\n\n        <div class=\"authBlock\">\n            <h3>Sign Up</h3>\n\n            <div class=\"formGroup\">\n                <input type=\"email\" class=\"formControl\" placeholder=\"Email Address\" #userEmail required>\n            </div>\n\n            <div class=\"formGroup\">\n                <input type=\"password\" class=\"formControl\" placeholder=\"Password\" #userPwd required>\n            </div>\n\n\n            <div class=\"formGroup\">\n                <input type=\"button\" class=\"btn btn-primary\" value=\"Sign Up\" (click)=\"authService.SignUp(userEmail.value, userPwd.value)\">\n            </div>\n\n            <div class=\"formGroup\">\n                <span class=\"or\"><span class=\"orInner\">Or</span></span>\n            </div>\n\n            <!-- Continue with Google -->\n            <div class=\"formGroup\">\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"authService.GoogleAuth()\">\n          <i class=\"fab fa-google-plus-g\"></i>\n          Continue with Google\n        </button>\n            </div>\n\n\n        </div>\n\n        <div class=\"redirectToLogin\">\n            <span>Already have an account? <span class=\"btn btn-primary\" routerLink=\"/sign-in\">Log In</span></span>\n        </div>\n    </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-verify-email',\n  templateUrl: './verify-email.component.html',\n  styleUrls: ['./verify-email.component.css']\n})\nexport class VerifyEmailComponent implements OnInit {\n\n  constructor(\n    public authService: AuthService\n  ) { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"displayTable\">\n    <div class=\"displayTableCell\">\n\n        <div class=\"authBlock\">\n            <h3>Thank You for Registering</h3>\n\n            <div class=\"formGroup\" *ngIf=\"authService.userData as user\">\n                <p class=\"text-center\">We have sent a confirmation email to <strong>{{user.email}}</strong>.</p>\n                <p class=\"text-center\">Please check your email and click on the link to verfiy your email address.</p>\n            </div>\n\n            <!-- Calling SendVerificationMail() method using authService Api -->\n            <div class=\"formGroup\">\n                <button type=\"button\" class=\"btn btnPrimary\" (click)=\"authService.SendVerificationMail()\">\n          <i class=\"fas fa-redo-alt\"></i>\n          Resend Verification Email\n        </button>\n            </div>\n\n        </div>\n\n        <div class=\"redirectToLogin\">\n            <span>Go back to?<span class=\"redirect\" routerLink=\"/sign-in\"> Sign in</span></span>\n        </div>\n\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  constructor(\n    public authService: AuthService\n  ) { }\n\n  ngOnInit() { }\n\n}\n","<nav class=\"navbar  navbar-dark bg-primary navbar-expand-sm\">\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mainmenu\" aria-controls=\"mainmenu\" aria-expanded=\"false\" aria-label=\"Navigation Button\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n    <div class=\"collapse navbar-collapse\" id=\"mainmenu\">\n        <ul class=\"navbar-nav mx-auto \">\n            <li class=\"nav-item \"><a class=\"nav-link\" routerLink=\"dodawanie\">Dodawanie</a></li>\n            <li class=\"nav-item \" *ngIf=\"authService.userData as user; else login\"><a class=\"nav-link\" routerLink=\"sign-in\" (click)=\"authService.SignOut()\">Wyloguj</a></li>\n            <ng-template #login>\n                <a class=\"nav-link\" routerLink=\"sign-in\">Zaloguj</a>\n            </ng-template>\n            <li class=\"nav-item \"><a *ngIf=\"authService.userData as user\" class=\"nav-link\" routerLink=\"dashboard\">{{user.email}}</a></li>\n\n\n\n        </ul>\n    </div>\n</nav>","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    public authService: AuthService,\n    public router: Router\n  ) { }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    if (this.authService.isLoggedIn !== true) {\n      this.router.navigate(['sign-in']);\n    }\n    return true;\n  }\n\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFirestore, AngularFirestoreDocument } from '@angular/fire/firestore';\nimport { auth } from 'firebase';\n\nimport { User } from './user';\n\n@Injectable({ providedIn: 'root' })\n\nexport class AuthService {\n  userData: any; // Save logged in user data\n\n\n  constructor(\n    public afs: AngularFirestore,   // Inject Firestore service\n    public afAuth: AngularFireAuth, // Inject Firebase auth service\n    public router: Router,\n    public ngZone: NgZone // NgZone service to remove outside scope warning\n  ) {\n    /* Saving user data in localstorage when\n    logged in and setting up null when logged out */\n    this.afAuth.authState.subscribe(user => {\n      if (user) {\n        this.userData = user;\n        localStorage.setItem('user', JSON.stringify(this.userData));\n        JSON.parse(localStorage.getItem('user'));\n      } else {\n        localStorage.setItem('user', null);\n        JSON.parse(localStorage.getItem('user'));\n      }\n    });\n  }\n\n  // Sign in with email/password\n  SignIn(email, password) {\n    return this.afAuth.signInWithEmailAndPassword(email, password)\n      .then((result) => {\n        this.ngZone.run(() => {\n          this.router.navigate(['dodawanie']);\n        });\n        this.SetUserData(result.user);\n      }).catch((error) => {\n        window.alert(error.message);\n      });\n  }\n\n  // Sign up with email/password\n  SignUp(email, password) {\n    return this.afAuth.createUserWithEmailAndPassword(email, password)\n      .then((result) => {\n        /* Call the SendVerificaitonMail() function when new user sign\n        up and returns promise */\n        this.SendVerificationMail();\n        this.SetUserData(result.user);\n      }).catch((error) => {\n        window.alert(error.message);\n      });\n  }\n\n  // Send email verfificaiton when new user sign up\n  async SendVerificationMail() {\n    return (await this.afAuth.currentUser).sendEmailVerification()\n      .then(() => {\n        this.router.navigate(['verify-email-address']);\n      });\n  }\n\n  // Reset Forggot password\n  ForgotPassword(passwordResetEmail) {\n    return this.afAuth.sendPasswordResetEmail(passwordResetEmail)\n      .then(() => {\n        window.alert('Password reset email sent, check your inbox.');\n      }).catch((error) => {\n        window.alert(error);\n      });\n  }\n\n  // Returns true when user is looged in and email is verified\n  get isLoggedIn(): boolean {\n    const user = JSON.parse(localStorage.getItem('user'));\n    return (user !== null && user.emailVerified !== false) ? true : false;\n  }\n\n  // Sign in with Google\n  GoogleAuth() {\n    return this.AuthLogin(new auth.GoogleAuthProvider()).then(() => {\n      this.router.navigate(['dodawanie']);\n    });\n  }\n\n\n  // Auth logic to run auth providers\n  AuthLogin(provider) {\n    return this.afAuth.signInWithPopup(provider)\n      .then((result) => {\n        this.ngZone.run(() => {\n          this.router.navigate(['dashboard']);\n        });\n        this.SetUserData(result.user);\n      }).catch((error) => {\n        window.alert(error);\n      });\n  }\n\n  /* Setting up user data when sign in with username/password,\n  sign up with username/password and sign in with social auth\n  provider in Firestore database using AngularFirestore + AngularFirestoreDocument service */\n  SetUserData(user) {\n    const userRef: AngularFirestoreDocument<any> = this.afs.doc(`users/${user.uid}`);\n    const userData: User = {\n      uid: user.uid,\n      email: user.email,\n      displayName: user.displayName,\n      photoURL: user.photoURL,\n      emailVerified: user.emailVerified\n    };\n    return userRef.set(userData, {\n      merge: true\n    });\n  }\n\n  // Sign out\n  SignOut() {\n    return this.afAuth.signOut().then(() => {\n      localStorage.removeItem('user');\n      this.router.navigate(['sign-in']);\n      this.refresh();\n    });\n  }\n  refresh(): void {\n    location.reload();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestoreCollection, AngularFirestore } from '@angular/fire/firestore';\nimport { Score } from './score';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ScoreService {\n\n  private dbPath = '/highscore';\n\n  highscoreRef: AngularFirestoreCollection<Score> = null;\n\n  constructor(public db: AngularFirestore) {\n    this.highscoreRef = db.collection(this.dbPath);\n  }\n\n  addScore(score: Score): void {\n    const param = JSON.parse(JSON.stringify(score));\n    this.highscoreRef.add(param);\n  }\n  getScoreList(): AngularFirestoreCollection<Score> {\n\n    return this.highscoreRef;\n  }\n}\n","export class Score {\r\n  who: string;\r\n  key: string;\r\n  ileOdpowiedzi: number;\r\n  czas: number;\r\n  date: string;\r\n\r\n}\r\n","export const environment = {\n  production: false,\n  firebaseConfig : {\n    apiKey: \"AIzaSyBeiE7JebqOSCyRWRnr4fjKORUbujyP4fU\",\n    authDomain: \"mojagraaa.firebaseapp.com\",\n    databaseURL: \"https://mojagraaa.firebaseio.com\",\n    projectId: \"mojagraaa\",\n    storageBucket: \"mojagraaa.appspot.com\",\n    messagingSenderId: \"965533806322\",\n    appId: \"1:965533806322:web:141c6c738031bd14d1aa6b\",\n    measurementId: \"G-XCDW9NZN8F\"\n  }\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}